@startuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
skinparam style strictuml
hide empty members
package western
{
CLASS Boisson
{
+  <<create>> Boisson (nom:String,genre:Genre)
+ getNom():String
+ getGenre():Genre
+ getNomAvecArticleIndefini():String
+ getNomAvecArticlePartitif():String
+ getNomAvecArticleDefini():String
+ getNomAvecPreposition(preposition:String):String

}
CLASS Personnage
{
- nom:String
+  <<create>> Personnage (nom:String)
+  <<create>> Personnage (nom:String,boisson:Boisson)
+ dire(texte:String)
+ sePresenter()
+ boire(boisson:Boisson)
+ boire()
+ getNom():String
+ getBoisson():Boisson
+ {static} getPseudos(personnages:Nommable[*]):String
+ {static} getBoissonParDefaut():Boisson

}
CLASS Narrateur
{
+  <<create>> Narrateur ()
+  <<create>> Narrateur (nom:String)
+ dire(texte:String){redefine::Personnage.dire}
+ boire(boisson:Boisson){redefine::Personnage.boire}
+ boire(){redefine::Personnage.boire}
+ getPseudo():String{redefine::Personnage.getPseudo}

}
INTERFACE Nommable<<interface>>
{
+ {abstract}getNom():String
+ {abstract}getPseudo():String

}
CLASS Histoire4
{
+  <<create>> Histoire4 ()
+ {static} main(args:String[])

}
CLASS Substantif
{
- nom:String
+  <<create>> Substantif (nom:String,genre:Genre)
+ getNom():String
+ getGenre():Genre
+ toString():String{redefine::Object.toString}
+ {static} isVowel(c:char):boolean
+ {static} startsWithVowel(s:String):boolean
+ getArticleIndefini():String
+ avecArticleIndefini():String
+ {static} getArticleDefini(genre:Genre):String
+ getArticleDefini():String
+ avecArticleDefini():String
+ {static} faireElision(article:String):String
+ elision():boolean
+ getArticlePartitif():String
+ avecArticlePartitif():String
+ avecElision(article:String):String
+ avecPreposition(preposition:String):String

}
ENUM Genre<<énumération>>
{
FEMININ
MASCULIN

}
CLASS Ripou
{
+  <<create>> Ripou (nom:String)
+  <<create>> Ripou (nom:String,boisson:Boisson)
+  <<create>> Ripou (nom:String,boisson:Boisson,look:String)
+ getLook():String
+ estLibre():boolean{redefine::Cowboy.estLibre}
+ getRecompense():Integer{redefine::Cowboy.getRecompense}
+ kidnapper(dame:Dame){redefine::Cowboy.kidnapper}
+ getCaptives():Dame[*]{redefine::Cowboy.getCaptives}
+ seFaireCapturer(cowBoy:Cowboy){redefine::Cowboy.seFaireCapturer}
+ seFaireTirerDessus(cowBoy:Cowboy){redefine::Cowboy.seFaireTirerDessus}
+ getPseudo():String{redefine::Cowboy.getPseudo}
+ sePresenter(){redefine::Cowboy.sePresenter}
+ liberer(dame:Dame){redefine::Cowboy.liberer}

}
CLASS Brigand
{
# {static} LOOK_PAR_DEFAUT:String
- look:String
- recompense:Integer 
- estLibre:boolean 
+  <<create>> Brigand (nom:String)
+  <<create>> Brigand (nom:String,boisson:Boisson)
+  <<create>> Brigand (nom:String,boisson:Boisson,look:String)
+ getLook():String
+ getRecompense():Integer
+ estLibre():boolean
+ kidnapper(dame:Dame)
+ seFaireCapturer(cowBoy:Cowboy)
+ seFaireTirerDessus(cowBoy:Cowboy)
+ getPseudo():String{redefine::Personnage.getPseudo}
+ getCaptives():Dame[*]
+ sePresenter(){redefine::Personnage.sePresenter}
+ {static} getBoissonParDefaut():Boisson
+ {static} setBoissonParDefaut(boisson:Boisson)

}
CLASS Cowboy
{
- gains:Integer 
+  <<create>> Cowboy (nom:String)
+  <<create>> Cowboy (nom:String,boisson:Boisson)
+ getPseudo():String{redefine::Personnage.getPseudo}
+ liberer(dame:Dame)
+ liberer(captives:Dame[*])
+ capturer(horsLaLoi:HorsLaLoi)
+ tirerSur(brigand:HorsLaLoi)
+ sePresenter(){redefine::Personnage.sePresenter}
+ {static} getBoissonParDefaut():Boisson
+ {static} setBoissonParDefaut(boisson:Boisson)

}
CLASS Dame
{
- estLibre:boolean 
+  <<create>> Dame (nom:String)
+  <<create>> Dame (nom:String,boisson:Boisson)
+ getPseudo():String{redefine::Personnage.getPseudo}
+ seFaireKidnapper(horsLaLoi:HorsLaLoi)
+ seFaireLiberer(cowBoy:Cowboy)
+ estLibre():boolean
+ sePresenter(){redefine::Personnage.sePresenter}
+ {static} getBoissonParDefaut():Boisson
+ {static} setBoissonParDefaut(boisson:Boisson)
+ getRavisseur():HorsLaLoi

}
INTERFACE HorsLaLoi<<interface>>
{
+ {abstract}estLibre():boolean
+ {abstract}getRecompense():Integer
+ {abstract}kidnapper(dame:Dame)
+ {abstract}seFaireCapturer(cowBoy:Cowboy)
+ {abstract}seFaireTirerDessus(cowBoy:Cowboy)
+ {abstract}getLook():String
+ {abstract}getCaptives():Dame[*]

}

Nommable <|... Personnage

HorsLaLoi <|... Ripou

HorsLaLoi <|... Brigand

Nommable <|-- HorsLaLoi

Personnage <|--- Narrateur

Cowboy <|--- Ripou

Personnage <|--- Brigand

Personnage <|--- Cowboy

Personnage <|--- Dame

Boisson "0..1" ---> "0..1" Substantif : substantif >

Boisson "0..1" ---> "0..1" Boisson : EAU >

Personnage "0..1" ---> "0..1" Boisson : BOISSON_PAR_DEFAUT >

Personnage "0..1" ---> "0..1" Boisson : boisson >

Substantif "0..1" ---> "0..1" Genre : genre >

Ripou "0..1" ---> "0..1" Brigand : brigand >

Brigand "*" ---> "0..1" Dame : captives >

Brigand "0..1" ---> "0..1" Cowboy : gardien >

Brigand "0..1" ---> "0..1" Boisson : boissonParDefaut >

Cowboy "*" ---> "0..1" HorsLaLoi : captures >

Cowboy "0..1" ---> "0..1" Boisson : boissonParDefaut >

Dame "0..1" ---> "0..1" Cowboy : sauveur >

Dame "0..1" ---> "0..1" HorsLaLoi : ravisseur >

Dame "0..1" ---> "0..1" Boisson : boissonParDefaut >
}
@enduml